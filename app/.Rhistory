val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
visNetwork(nodes2, edgelist2) %>%
visIgraphLayout(layout = "layout_with_kk") %>%
visOptions(highlightNearest = list(enabled =TRUE, degree = 2, hover = T), nodesIdSelection = TRUE, selectedBy = list(variable = "group", highlight = TRUE),
manipulation = TRUE)%>%
visEdges(hoverWidth = 3, selectionWidth = 3) %>%
visNodes(label = NULL, labelHighlightBold = TRUE, borderWidthSelected = 4) %>%
visGroups(groupname = "a", color = "orange", shape = "circle") %>%
visGroups(groupname = "b", color = "blue", shape = "triangle")
library(visNetwork)
gene_file <- read.csv(file = './data/gene_list.csv', header=T, as.is=T)
cpg_file <- read.csv(file = './data/cpg_list.csv', header=T, as.is=T)
bed_file <- read.csv(file = './data/gene_to_cpg_map.csv', header=T, as.is=T)
gene_list <- as.data.frame(gene_file, stringsAsFactors = FALSE)
cpg_list <- as.data.frame(cpg_file, stringsAsFactors = FALSE)
mapping <- as.data.frame(bed_file, stringsAsFactors = FALSE)
gene_list['group'] = 'a'
cpg_list['group'] = 'b'
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list$color <- gene_palette(length(gene_list))[as.numeric(cut(gene_list$feature, breaks = length(gene_list)))]
gene_list$feature <- as.numeric(gene_list$feature)
gene_list
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list$color <- cpg_palette(length(cpg_list))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
cpg_list$feature <- as.numeric(cpg_list$feature)
gene_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(gene_list$id))
{
if (gene_list$feature[i] > 0)
{
gene_list2[k, ] <- gene_list[i, ]
k = k+1
}
}
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list2$color <- gene_palette(length(gene_list2))[as.numeric(cut(gene_list2$feature, breaks = length(gene_list)))]
colnames(gene_list2) <- c('feature', 'id', 'group', 'color', 'size')
gene_list2
cpg_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(cpg_list$id))
{
if (cpg_list$feature[i] > 0)
{
cpg_list2[k, ] <- cpg_list[i, ]
k = k+1
}
}
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list2$color <- cpg_palette(length(cpg_list2))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
colnames(cpg_list2) <- c('feature', 'id', 'group', 'color', 'size')
nodes2 <- rbind(gene_list2, cpg_list2)
#create edgelist2
genes2 <- gene_list2$id
rownumber2 = 1
len2 = length(genes2)
iterations2 = len2*(len2-1)/2
edgelist2 <- matrix(nrow = iterations2, ncol = 2)
for (i in 1:(len2-1))
{
val <- genes2[i]
for (j in 1:(len2-i))
{
val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
visNetwork(nodes2, edgelist2) %>%
visIgraphLayout(layout = "layout_with_kk") %>%
visOptions(highlightNearest = list(enabled =TRUE, degree = 2, hover = T), nodesIdSelection = TRUE, selectedBy = list(variable = "group", highlight = TRUE),
manipulation = TRUE)%>%
visEdges(hoverWidth = 3, selectionWidth = 3) %>%
visNodes(label = NULL, labelHighlightBold = TRUE, borderWidthSelected = 4) %>%
visGroups(groupname = "a", color = "orange", shape = "circle") %>%
visGroups(groupname = "b", color = "blue", shape = "triangle")
gene_list2 <- data.frame(matrix(ncol = 5))
library(visNetwork)
gene_file <- read.csv(file = './data/gene_list.csv', header=T, as.is=T)
cpg_file <- read.csv(file = './data/cpg_list.csv', header=T, as.is=T)
bed_file <- read.csv(file = './data/gene_to_cpg_map.csv', header=T, as.is=T)
gene_list <- as.data.frame(gene_file, stringsAsFactors = FALSE)
cpg_list <- as.data.frame(cpg_file, stringsAsFactors = FALSE)
mapping <- as.data.frame(bed_file, stringsAsFactors = FALSE)
gene_list['group'] = 'a'
cpg_list['group'] = 'b'
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list$color <- gene_palette(length(gene_list))[as.numeric(cut(gene_list$feature, breaks = length(gene_list)))]
gene_list$feature <- as.numeric(gene_list$feature)
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list$color <- cpg_palette(length(cpg_list))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
cpg_list$feature <- as.numeric(cpg_list$feature)
gene_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(gene_list$id))
{
if (gene_list$feature[i] > 0)
{
gene_list2[k, ] <- gene_list[i, ]
k = k+1
}
}
gene_list2
colnames(gene_list2) <- c('feature', 'id', 'group', 'color', 'size')
cpg_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(cpg_list$id))
{
if (cpg_list$feature[i] > 0)
{
cpg_list2[k, ] <- cpg_list[i, ]
k = k+1
}
}
colnames(cpg_list2) <- c('feature', 'id', 'group', 'color', 'size')
nodes2 <- rbind(gene_list2, cpg_list2)
#create edgelist2
genes2 <- gene_list2$id
rownumber2 = 1
len2 = length(genes2)
iterations2 = len2*(len2-1)/2
edgelist2 <- matrix(nrow = iterations2, ncol = 2)
for (i in 1:(len2-1))
{
val <- genes2[i]
for (j in 1:(len2-i))
{
val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
visNetwork(nodes2, edgelist2) %>%
visIgraphLayout(layout = "layout_with_kk") %>%
visOptions(highlightNearest = list(enabled =TRUE, degree = 2, hover = T), nodesIdSelection = TRUE, selectedBy = list(variable = "group", highlight = TRUE),
manipulation = TRUE)%>%
visEdges(hoverWidth = 3, selectionWidth = 3) %>%
visNodes(label = NULL, labelHighlightBold = TRUE, borderWidthSelected = 4) %>%
visGroups(groupname = "a", shape = "circle") %>%
visGroups(groupname = "b", shape = "triangle")
library(visNetwork)
gene_file <- read.csv(file = './data/gene_list.csv', header=T, as.is=T)
cpg_file <- read.csv(file = './data/cpg_list.csv', header=T, as.is=T)
bed_file <- read.csv(file = './data/gene_to_cpg_map.csv', header=T, as.is=T)
gene_list <- as.data.frame(gene_file, stringsAsFactors = FALSE)
cpg_list <- as.data.frame(cpg_file, stringsAsFactors = FALSE)
mapping <- as.data.frame(bed_file, stringsAsFactors = FALSE)
gene_list['group'] = 'a'
cpg_list['group'] = 'b'
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list$color <- gene_palette(length(gene_list))[as.numeric(cut(gene_list$feature, breaks = length(gene_list)))]
gene_list$feature <- as.numeric(gene_list$feature)
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list$color <- cpg_palette(length(cpg_list))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
cpg_list$feature <- as.numeric(cpg_list$feature)
gene_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(gene_list$id))
{
if (gene_list$feature[i] > 0.6)
{
gene_list2[k, ] <- gene_list[i, ]
k = k+1
}
}
gene_list2
colnames(gene_list2) <- c('feature', 'id', 'group', 'color', 'size')
cpg_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(cpg_list$id))
{
if (cpg_list$feature[i] > 0.6)
{
cpg_list2[k, ] <- cpg_list[i, ]
k = k+1
}
}
colnames(cpg_list2) <- c('feature', 'id', 'group', 'color', 'size')
nodes2 <- rbind(gene_list2, cpg_list2)
#create edgelist2
genes2 <- gene_list2$id
rownumber2 = 1
len2 = length(genes2)
iterations2 = len2*(len2-1)/2
edgelist2 <- matrix(nrow = iterations2, ncol = 2)
for (i in 1:(len2-1))
{
val <- genes2[i]
for (j in 1:(len2-i))
{
val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
visNetwork(nodes2, edgelist2) %>%
visIgraphLayout(layout = "layout_with_kk") %>%
visOptions(highlightNearest = list(enabled =TRUE, degree = 2, hover = T), nodesIdSelection = TRUE, selectedBy = list(variable = "group", highlight = TRUE),
manipulation = TRUE)%>%
visEdges(hoverWidth = 3, selectionWidth = 3) %>%
visNodes(label = NULL, labelHighlightBold = TRUE, borderWidthSelected = 4) %>%
visGroups(groupname = "a", shape = "circle") %>%
visGroups(groupname = "b", shape = "triangle")
library(visNetwork)
gene_file <- read.csv(file = './data/gene_list.csv', header=T, as.is=T)
cpg_file <- read.csv(file = './data/cpg_list.csv', header=T, as.is=T)
bed_file <- read.csv(file = './data/gene_to_cpg_map.csv', header=T, as.is=T)
gene_list <- as.data.frame(gene_file, stringsAsFactors = FALSE)
cpg_list <- as.data.frame(cpg_file, stringsAsFactors = FALSE)
mapping <- as.data.frame(bed_file, stringsAsFactors = FALSE)
gene_list['group'] = 'a'
cpg_list['group'] = 'b'
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list$color <- gene_palette(length(gene_list))[as.numeric(cut(gene_list$feature, breaks = length(gene_list)))]
gene_list$feature <- as.numeric(gene_list$feature)
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list$color <- cpg_palette(length(cpg_list))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
cpg_list$feature <- as.numeric(cpg_list$feature)
gene_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(gene_list$id))
{
if (gene_list$feature[i] > 0)
{
gene_list2[k, ] <- gene_list[i, ]
k = k+1
}
}
gene_list2
colnames(gene_list2) <- c('feature', 'id', 'group', 'color', 'size')
cpg_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(cpg_list$id))
{
if (cpg_list$feature[i] > 0)
{
cpg_list2[k, ] <- cpg_list[i, ]
k = k+1
}
}
colnames(cpg_list2) <- c('feature', 'id', 'group', 'color', 'size')
nodes2 <- rbind(gene_list2, cpg_list2)
#create edgelist2
genes2 <- gene_list2$id
rownumber2 = 1
len2 = length(genes2)
iterations2 = len2*(len2-1)/2
edgelist2 <- matrix(nrow = iterations2, ncol = 2)
for (i in 1:(len2-1))
{
val <- genes2[i]
for (j in 1:(len2-i))
{
val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
visNetwork(nodes2, edgelist2) %>%
visIgraphLayout(layout = "layout_with_kk") %>%
visOptions(highlightNearest = list(enabled =TRUE, degree = 2, hover = T), nodesIdSelection = TRUE, selectedBy = list(variable = "group", highlight = TRUE),
manipulation = TRUE)%>%
visEdges(hoverWidth = 3, selectionWidth = 3) %>%
visNodes(label = NULL, labelHighlightBold = TRUE, borderWidthSelected = 4) %>%
visGroups(groupname = "a", shape = "circle") %>%
visGroups(groupname = "b", shape = "triangle")
getwd()
library(shiny)
library(visNetwork)
library(dplyr)
runApp("app")
git status
library(shiny)
library(visNetwork)
library(dplyr)
runApp("app")
getwd()
library(shiny)
library(visNetwork)
library(dplyr)
runApp("app")
getwd()
library(visNetwork)
# function to plot subgraph
subgraph <- function(df1, df2, df3){
gene_file <- read.csv(file = './data/gene_list.csv', header=T, as.is=T)
cpg_file <- read.csv(file = './data/cpg_list.csv', header=T, as.is=T)
bed_file <- read.csv(file = './data/gene_to_cpg_map.csv', header=T, as.is=T)
gene_list <- as.data.frame(gene_file, stringsAsFactors = FALSE)
cpg_list <- as.data.frame(cpg_file, stringsAsFactors = FALSE)
mapping <- as.data.frame(bed_file, stringsAsFactors = FALSE)
colnames(gene_list) <- c('feature', 'id', 'group', 'color', 'size')
colnames(cpg_list) <- c('feature', 'id', 'group', 'color', 'size')
gene_list['group'] = 'a'
cpg_list['group'] = 'b'
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list$color <- gene_palette(length(gene_list))[as.numeric(cut(gene_list$feature, breaks = length(gene_list)))]
gene_list$feature <- as.numeric(gene_list$feature)
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list$color <- cpg_palette(length(cpg_list))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
cpg_list$feature <- as.numeric(cpg_list$feature)
gene_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(gene_list$id))
{
if (gene_list$feature[i] > 0)
{
gene_list2[k, ] <- gene_list[i, ]
k = k+1
}
}
colnames(gene_list2) <- c('feature', 'id', 'group', 'color', 'size')
cpg_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(cpg_list$id))
{
if (cpg_list$feature[i] > 0)
{
cpg_list2[k, ] <- cpg_list[i, ]
k = k+1
}
}
colnames(cpg_list2) <- c('feature', 'id', 'group', 'color', 'size')
nodes2 <- rbind(gene_list2, cpg_list2)
#create edgelist2
genes2 <- gene_list2$id
rownumber2 = 1
len2 = length(genes2)
iterations2 = len2*(len2-1)/2
edgelist2 <- matrix(nrow = iterations2, ncol = 2)
for (i in 1:(len2-1))
{
val <- genes2[i]
for (j in 1:(len2-i))
{
val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
return(list(nodes=nodes2, edges=edgelist2))
}
# Function to plot color bar
color.bar <- function(lut, min, max, nticks=11, ticks=seq(min, max, len=nticks), title='') {
par(mar=c(1, 4))
scale = (length(lut)-1)/(max-min)
dev.new(width=.5, height=2.5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colorRampPalette(c("yellow2","goldenrod","darkred"))(100), 0, 1)
library(visNetwork)
# function to plot subgraph
subgraph <- function(df1, df2, df3){
gene_file <- read.csv(file = './data/gene_list.csv', header=T, as.is=T)
cpg_file <- read.csv(file = './data/cpg_list.csv', header=T, as.is=T)
bed_file <- read.csv(file = './data/gene_to_cpg_map.csv', header=T, as.is=T)
gene_list <- as.data.frame(gene_file, stringsAsFactors = FALSE)
cpg_list <- as.data.frame(cpg_file, stringsAsFactors = FALSE)
mapping <- as.data.frame(bed_file, stringsAsFactors = FALSE)
colnames(gene_list) <- c('feature', 'id', 'group', 'color', 'size')
colnames(cpg_list) <- c('feature', 'id', 'group', 'color', 'size')
gene_list['group'] = 'a'
cpg_list['group'] = 'b'
gene_palette <- colorRampPalette(c("lightblue", "steelblue4"))
gene_list$color <- gene_palette(length(gene_list))[as.numeric(cut(gene_list$feature, breaks = length(gene_list)))]
gene_list$feature <- as.numeric(gene_list$feature)
cpg_palette <- colorRampPalette(c("yellow2","goldenrod","darkred"))
cpg_list$color <- cpg_palette(length(cpg_list))[as.numeric(cut(cpg_list$feature, breaks = length(cpg_list)))]
cpg_list$feature <- as.numeric(cpg_list$feature)
gene_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(gene_list$id))
{
if (gene_list$feature[i] > 0)
{
gene_list2[k, ] <- gene_list[i, ]
k = k+1
}
}
colnames(gene_list2) <- c('feature', 'id', 'group', 'color', 'size')
cpg_list2 <- data.frame(matrix(ncol = 5))
k = 1
for (i in 1:length(cpg_list$id))
{
if (cpg_list$feature[i] > 0)
{
cpg_list2[k, ] <- cpg_list[i, ]
k = k+1
}
}
colnames(cpg_list2) <- c('feature', 'id', 'group', 'color', 'size')
nodes2 <- rbind(gene_list2, cpg_list2)
#create edgelist2
genes2 <- gene_list2$id
rownumber2 = 1
len2 = length(genes2)
iterations2 = len2*(len2-1)/2
edgelist2 <- matrix(nrow = iterations2, ncol = 2)
for (i in 1:(len2-1))
{
val <- genes2[i]
for (j in 1:(len2-i))
{
val2 <- genes2[j+i]
edgelist2[rownumber2, 1] = val
edgelist2[rownumber2, 2] = val2
rownumber2 = rownumber2 + 1
}
}
edgelist2 = as.data.frame(edgelist2)
colnames(edgelist2) = c("from", "to")
# create bed file for
for (i in 1: nrow(mapping))
{
if ((mapping[i, 1] %in% gene_list2$id) & (mapping[i, 2] %in% cpg_list2$id))
{
edgelist2 = rbind(edgelist2, mapping[i,])
}
}
return(list(nodes=nodes2, edges=edgelist2))
}
# Function to plot color bar
color.bar <- function(lut, min, max, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=.5, height=2.5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colorRampPalette(c("yellow2","goldenrod","darkred"))(100), 0, 1)
shiny::runApp('Documents/multio-viz/app')
runApp('Documents/multio-viz/app')
shiny::runApp('Documents/multio-viz/app')
